{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card/card/card.component.ts","webpack:///src/app/card/card/card.component.html","webpack:///src/app/card/card/card.service.ts","webpack:///src/app/core/interceptor/security.interceptor.ts","webpack:///src/app/core/pipes/credit-card.pipe.ts","webpack:///src/app/core/pipes/pipes.module.ts","webpack:///src/app/core/service/app-initializer.service.ts","webpack:///src/app/core/service/widget-event.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","getKeycloakInstance","window","keycloak","initialized","AppComponent","widgetEventService","unsubscribeFromKeycloakEvent","subscribeToWidgetEvent","KEYCLOAK_EVENT_TYPE","selector","templateUrl","styleUrls","init","appInitializerService","initialize","AppModule","injector","el","customElements","define","provide","useFactory","deps","multi","useClass","forRoot","defaultLanguage","declarations","imports","providers","entryComponents","CardComponent","cardService","env","firstCall","userID","idTokenParsed","preferred_username","getSeedsCardByUserID","cardName","subscribe","response","seedCard","onDetail","error","console","payload","cardname","accountID","log","createWidgetEventPublisher","OUTPUT_EVENT_TYPES","transactionsDetail","CardService","httpClient","params","options","url","get","domainUrl","providedIn","SecurityInterceptor","authenticated","token","getKeycloakToken","Authorization","request","next","headers","getDefaultOptions","clone","setHeaders","handle","CreditCardPipe","value","obfuscatedValue","length","substring","name","PipesModule","AppInitializerService","translate","use","navigator","language","split","setTranslation","EVENT_KEY","WidgetEventService","widgetEventToFSA","widgetEvent","type","detail","meta","eventId","CustomEvent","dispatchEvent","publishWidgetEvent","eventHandler","addEventListener","removeEventListener","widgetEvents","forEach","eventType","environment","production","assetsPath","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { EVENT_KEY, WidgetEventService } from './core/service/widget-event.service';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window['entando'] &&\r\n    window['entando'].keycloak && {\r\n      ...window['entando'].keycloak,\r\n      initialized: true,\r\n    }) || {\r\n    initialized: false,\r\n  };\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  keycloak = getKeycloakInstance();\r\n  unsubscribeFromKeycloakEvent = null;\r\n\r\n  @Input('cardname') cardname: string;\r\n\r\n  constructor(private widgetEventService: WidgetEventService) {}\r\n\r\n  ngOnInit() {\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = this.widgetEventService.subscribeToWidgetEvent(\r\n      EVENT_KEY.KEYCLOAK_EVENT_TYPE,\r\n      () => {\r\n        this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.unsubscribeFromKeycloakEvent) {\r\n      this.unsubscribeFromKeycloakEvent();\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"!(keycloak.initialized && keycloak.authenticated); else elseBlock\">\r\n  Waiting for authorization...\r\n</div>\r\n<ng-template #elseBlock>\r\n  <app-card [cardName]=\"cardname\" [keycloak]=\"keycloak\"></app-card>\r\n</ng-template>\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injector, NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AppComponent } from './app.component';\r\nimport { CardComponent } from './card/card/card.component';\r\nimport { SecurityInterceptor } from './core/interceptor/security.interceptor';\r\nimport { PipesModule } from './core/pipes/pipes.module';\r\nimport { AppInitializerService } from './core/service/app-initializer.service';\r\n\r\nexport function init(appInitializerService: AppInitializerService) {\r\n  return () => appInitializerService.initialize();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, CardComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    PipesModule,\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: 'en',\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: init,\r\n      deps: [AppInitializerService],\r\n      multi: true,\r\n    },\r\n    { provide: HTTP_INTERCEPTORS, useClass: SecurityInterceptor, multi: true },\r\n  ],\r\n  entryComponents: [AppComponent],\r\n})\r\nexport class AppModule {\r\n  constructor(private injector: Injector) {}\r\n\r\n  ngDoBootstrap() {\r\n    const el = createCustomElement(AppComponent, { injector: this.injector });\r\n    customElements.define('sd-seeds-card-details-ng', el);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { EVENT_KEY, WidgetEventService } from 'src/app/core/service/widget-event.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SeedCard } from '../card.model';\r\nimport { CardService } from './card.service';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n  env = environment;\r\n  firstCall = true;\r\n\r\n  @Input() cardName: string;\r\n  @Input() keycloak;\r\n\r\n  seedCard: SeedCard;\r\n\r\n  constructor(private cardService: CardService, private widgetEventService: WidgetEventService) {}\r\n\r\n  ngOnInit() {\r\n    const userID = this.keycloak.idTokenParsed.preferred_username;\r\n\r\n    this.cardService.getSeedsCardByUserID(userID, this.cardName).subscribe(\r\n      (response: SeedCard) => {\r\n        this.seedCard = response;\r\n        if (this.cardName === 'checking' && this.firstCall) {\r\n          this.firstCall = false;\r\n          this.onDetail();\r\n        }\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  onDetail() {\r\n    if (this.seedCard && this.seedCard.id) {\r\n      const payload = { cardname: this.cardName, accountID: this.seedCard.id };\r\n      console.log(payload);\r\n      this.widgetEventService.createWidgetEventPublisher(EVENT_KEY.OUTPUT_EVENT_TYPES.transactionsDetail, payload);\r\n    }\r\n  }\r\n}\r\n","<div (click)=\"onDetail()\">\r\n  <div class=\"seeds-card\">\r\n    <div class=\"seeds-card-header\">\r\n      <img\r\n        class=\"seeds-card-icon\"\r\n        [src]=\"env.assetsPath + '/Framecredit-card.png'\"\r\n      />\r\n      <div class=\"seeds-card-title\">\r\n        {{ \"label.common.\" + cardName | translate }}\r\n      </div>\r\n      <div class=\"seeds-card-value\">\r\n        {{ seedCard?.accountNumber | creditCard }}\r\n      </div>\r\n      <div class=\"seeds-card-action\">\r\n        <i class=\"fas fa-ellipsis-v\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"seedCard\" class=\"seeds-card-body\">\r\n      <p class=\"seeds-card-balance\">\r\n        {{ seedCard?.balance | currency }}\r\n      </p>\r\n      <p class=\"seeds-card-balance-caption\">\r\n        {{ \"label.common.balance\" | translate }}\r\n      </p>\r\n\r\n      <p *ngIf=\"seedCard?.rewardPoints\" class=\"seeds-card-balance-reward\">\r\n        {{ \"label.common.rewardPoints\" | translate }}:\r\n        <span class=\"seeds-card-balance-reward-value\">\r\n          {{ seedCard.rewardPoints }}\r\n        </span>\r\n      </p>\r\n    </div>\r\n\r\n    <div *ngIf=\"!seedCard\">\r\n      <p class=\"seeds-card-balance-caption\">\r\n        {{\r\n          \"label.common.noCheckingAccount\" | translate: { cardName: cardName }\r\n        }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { SeedCard } from '../card.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CardService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getSeedscard(params: any = {}): Observable<any> {\r\n    const { id, options, cardname } = params;\r\n    const url = `${environment}/banking/api/${cardname}s/${id}`;\r\n    return this.httpClient.get<any>(url);\r\n  }\r\n\r\n  getSeedsCardByUserID(userID, cardName) {\r\n    const url = `${environment.domainUrl}/banking/api/${cardName}/user/${userID}`;\r\n    return this.httpClient.get<SeedCard>(url);\r\n  }\r\n}\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SecurityInterceptor implements HttpInterceptor {\r\n  getKeycloakToken() {\r\n    if (\r\n      window &&\r\n      window['entando'] &&\r\n      window['entando'].keycloak &&\r\n      window['entando'].keycloak.authenticated\r\n    ) {\r\n      return window['entando'].keycloak.token;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getDefaultOptions() {\r\n    const token = this.getKeycloakToken();\r\n\r\n    return {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  }\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const headers = this.getDefaultOptions();\r\n\r\n    request = request.clone({\r\n      setHeaders: headers,\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'creditCard',\r\n})\r\nexport class CreditCardPipe implements PipeTransform {\r\n  transform(value: string): any {\r\n    if (!value) return '';\r\n\r\n    let obfuscatedValue = '...';\r\n    if (value.length >= 4) {\r\n      obfuscatedValue += value.substring(value.length - 4, value.length);\r\n    }\r\n    return obfuscatedValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreditCardPipe } from './credit-card.pipe';\r\n\r\n@NgModule({\r\n  declarations: [CreditCardPipe],\r\n  imports: [CommonModule],\r\n  exports: [CreditCardPipe],\r\n})\r\nexport class PipesModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as en from '../i18n/en.json';\r\nimport * as it from '../i18n/it.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppInitializerService {\r\n  constructor(private translate: TranslateService) {}\r\n\r\n  initialize() {\r\n    this.translate.use(window.navigator.language.split('-')[0]);\r\n    this.translate.setTranslation('en', en['default']);\r\n    this.translate.setTranslation('it', it['default']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport const EVENT_KEY = {\r\n  KEYCLOAK_EVENT_TYPE: 'keycloak',\r\n  OUTPUT_EVENT_TYPES: {\r\n    transactionsDetail: 'seedscard.transactionsDetail',\r\n  },\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WidgetEventService {\r\n  constructor() {}\r\n\r\n  publishWidgetEvent(eventId, payload) {\r\n    const widgetEvent = new CustomEvent(eventId, {\r\n      detail: {\r\n        payload,\r\n      },\r\n    });\r\n    window.dispatchEvent(widgetEvent);\r\n  }\r\n\r\n  createWidgetEventPublisher(eventId, payload) {\r\n    this.publishWidgetEvent(eventId, payload);\r\n  }\r\n\r\n  subscribeToWidgetEvent(eventId, eventHandler) {\r\n    window.addEventListener(eventId, eventHandler);\r\n    return () => {\r\n      window.removeEventListener(eventId, eventHandler);\r\n    };\r\n  }\r\n\r\n  subscribeToWidgetEvents(widgetEvents, eventHandler) {\r\n    widgetEvents.forEach((eventType) =>\r\n      window.addEventListener(eventType, eventHandler)\r\n    );\r\n\r\n    return () => {\r\n      widgetEvents.forEach((eventType) =>\r\n        window.removeEventListener(eventType, eventHandler)\r\n      );\r\n    };\r\n  }\r\n\r\n  widgetEventToFSA = (widgetEvent) => {\r\n    // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n    const {\r\n      type,\r\n      detail: { payload, error, meta },\r\n    } = widgetEvent;\r\n    return { type, payload, error, meta };\r\n  };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  domainUrl: 'http://localhost:8081',\r\n  assetsPath: 'assets'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}